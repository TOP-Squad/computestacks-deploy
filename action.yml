name: 'ComputeStacks deploy action'
description: 'Rebuild a container service and check online state'
inputs:
  project-name:
    description: 'The name of the project associated to the account provided'
    required: true
  container-service-name:
    description: 'The name of the container service within the given project name'
    required: true
  base-url:
    description: 'The hostname/protocol for the container API'
    required: true
  poll-interval:
    description: 'Polling interval in seconds'
    required: true
  timeout:
    description: 'Timeout in seconds'
    required: true
  username:
    description: 'Username for API authentication'
    required: true
  password:
    description: 'Password for API authentication'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Make script available
      shell: bash
      run: |
        touch rebuild_and_check_state.sh
        cat "${{ github.action_path }}/rebuild_and_check_state.sh" > rebuild_and_check_state.sh
    - name: Get project ID
      id: get-project-id
      shell: bash
      run: |
        json=$(curl -u "${{ inputs.username }}:${{ inputs.password }}" -s ${{ inputs.base-url }}/api/projects)
        echo "json=$json"
        echo "project_id=$(echo "$json" | jq -r '.projects[] | select(.name == "${{ inputs.project-name }}") | .id')" >> "$GITHUB_OUTPUT"
        echo "Using project id: $project_id"
        cat "$GITHUB_OUTPUT"
    - name: Get container service ID
      id: get-container-service-id
      shell: bash
      run: |
        json=$(curl -u "${{ inputs.username }}:${{ inputs.password }}" -s "${{ inputs.base-url }}/api/projects/${{ steps.get-project-id.outputs.project_id }}/services")
        echo "container_service_id=$(echo "$json" | jq '.container_services[] | select(.label == "${{ inputs.container-service-name }}") | .id')" >> "$GITHUB_OUTPUT"
    - name: Run Bash Script
      shell: bash
      run: |
        chmod +x ./rebuild_and_check_state.sh
        ./rebuild_and_check_state.sh \
          --base-url "${{ inputs.base-url }}" \
          --poll-interval "${{ inputs.poll-interval }}" \
          --timeout "${{ inputs.timeout }}" \
          --username "${{ inputs.username }}" \
          --password "${{ inputs.password }}" \
          --container-id "${{ steps.get-container-service-id.outputs.container_service_id }}"
